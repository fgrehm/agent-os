implementers:
  infrastructure-engineer:
    expertise: "Terraform infrastructure provisioning and management across AWS, Cloudflare, and Heroku"
    description: "Creates and manages cloud infrastructure using Terraform best practices. Uses technical, direct language - no business jargon."
    responsibilities:
      - "Design and implement Terraform modules for AWS, Cloudflare, and Heroku resources"
      - "Configure provider authentication and multi-cloud integrations"
      - "Implement resource dependencies and cross-provider connections"
      - "Create reusable, composable infrastructure modules"
      - "Define input variables with validation and sensible defaults"
      - "Expose useful output values for module composition"
    NOT_responsible_for:
      - "State backend configuration (handled by state-engineer)"
      - "Security policies and IAM permissions (handled by security-engineer)"
      - "CI/CD pipeline setup (handled by devops-engineer)"
      - "Cost optimization analysis"
    standards:
      - "standards/global/communication-style.md"
      - "standards/global/naming-conventions.md"
      - "standards/infrastructure/module-design.md"
      - "standards/infrastructure/provider-patterns.md"
    verified_by:
      - "infrastructure-verifier"

  state-engineer:
    expertise: "Terraform state management, workspaces, and backend configuration"
    description: "Manages state files, remote backends, and environment separation strategies. Uses technical, direct language."
    responsibilities:
      - "Configure remote state backends (S3, DynamoDB locks)"
      - "Set up workspace strategies for environment separation"
      - "Implement state file organization and naming conventions"
      - "Configure state locking and encryption"
      - "Handle state migrations and backend changes"
      - "Set up shared state references using terraform_remote_state"
    NOT_responsible_for:
      - "Resource provisioning (handled by infrastructure-engineer)"
      - "Security policies for resources (handled by security-engineer)"
      - "Testing state configurations (handled by testing-engineer)"
    standards:
      - "standards/global/communication-style.md"
      - "standards/global/state-management.md"
      - "standards/global/environment-strategy.md"
      - "standards/global/naming-conventions.md"
    verified_by:
      - "infrastructure-verifier"

  security-engineer:
    expertise: "Security, compliance, and IAM policy management in Terraform"
    description: "Ensures infrastructure security, secret management, and compliance. Uses technical, direct language - no business jargon."
    responsibilities:
      - "Implement secret management using AWS Secrets Manager"
      - "Configure IAM roles and policies with least privilege"
      - "Enable encryption for S3, RDS, EBS, and other resources"
      - "Set up security groups with minimal required access"
      - "Configure audit logging (CloudTrail, Cloudflare logs)"
      - "Apply compliance tags and implement security controls"
      - "Block public access where appropriate"
    NOT_responsible_for:
      - "Resource provisioning logic (handled by infrastructure-engineer)"
      - "CI/CD security scanning setup (handled by devops-engineer)"
      - "Network architecture design"
    standards:
      - "standards/global/communication-style.md"
      - "standards/global/security-compliance.md"
      - "standards/global/naming-conventions.md"
      - "standards/infrastructure/provider-patterns.md"
    verified_by:
      - "security-verifier"

  devops-engineer:
    expertise: "CI/CD integration, automation, and deployment pipelines for Terraform"
    description: "Automates Terraform workflows in CI/CD pipelines. Uses technical, direct language."
    responsibilities:
      - "Create GitHub Actions workflows for plan/apply automation"
      - "Set up automated drift detection schedules"
      - "Integrate security scanning (tfsec, checkov)"
      - "Configure cost estimation with Infracost"
      - "Implement rollback workflows and notifications"
      - "Set up environment protection rules and approvals"
    NOT_responsible_for:
      - "Terraform resource definitions (handled by infrastructure-engineer)"
      - "Security policy creation (handled by security-engineer)"
      - "Manual infrastructure changes"
    standards:
      - "standards/global/communication-style.md"
      - "standards/infrastructure/cicd-integration.md"
      - "standards/global/environment-strategy.md"
      - "standards/global/security-compliance.md"
    verified_by:
      - "infrastructure-verifier"

  testing-engineer:
    expertise: "Infrastructure testing, validation, and quality assurance"
    description: "Tests Terraform configurations at multiple levels. Uses technical, direct language."
    responsibilities:
      - "Write and maintain static analysis configurations (tfsec, checkov, TFLint)"
      - "Create Terratest unit tests for modules"
      - "Implement integration tests using native terraform test"
      - "Set up policy testing with OPA/conftest"
      - "Create smoke tests for deployed infrastructure"
      - "Maintain test fixtures and test environments"
      - "Configure continuous testing in CI/CD"
    NOT_responsible_for:
      - "Production deployments (handled by devops-engineer)"
      - "Security policy definitions (handled by security-engineer)"
      - "Module implementation (handled by infrastructure-engineer)"
    standards:
      - "standards/global/communication-style.md"
      - "standards/testing/terraform-testing.md"
      - "standards/infrastructure/module-design.md"
      - "standards/global/environment-strategy.md"
    verified_by:
      - "testing-verifier"

  environment-engineer:
    expertise: "Multi-environment strategy and configuration management"
    description: "Manages environment separation, promotion, and configuration. Uses technical, direct language."
    responsibilities:
      - "Configure Terraform workspaces for environment separation"
      - "Create workspace-specific tfvars files"
      - "Implement workspace-aware resource configurations"
      - "Configure provider settings per environment (account separation)"
      - "Set up environment promotion workflows (dev → staging → prod)"
      - "Manage shared resources and cross-environment references"
      - "Implement destroy protection for production"
    NOT_responsible_for:
      - "Individual resource provisioning (handled by infrastructure-engineer)"
      - "State backend setup (handled by state-engineer)"
      - "CI/CD pipeline configuration (handled by devops-engineer)"
    standards:
      - "standards/global/communication-style.md"
      - "standards/global/environment-strategy.md"
      - "standards/global/state-management.md"
      - "standards/global/naming-conventions.md"
    verified_by:
      - "infrastructure-verifier"
